# ===================================================================
# BIBBI CLEANER V2.0 - BACKEND ENVIRONMENT CONFIGURATION
# ===================================================================
# Copy this file to .env and fill in your actual values
# Never commit .env files to version control!

# ===================================================================
# SUPABASE CONFIGURATION (Required)
# ===================================================================
# Get these from your Supabase project dashboard > Settings > API
SUPABASE_URL=https://your-project-id.supabase.co
SUPABASE_ANON_KEY=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.your-anon-key
SUPABASE_SERVICE_KEY=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.your-service-key

# ===================================================================
# DATABASE URL (Required for AI Chat Feature)
# ===================================================================
# Get from Supabase > Settings > Database > Connection pooling
# Format: postgresql://postgres.[project-id]:[password]@aws-0-[region].pooler.supabase.com:6543/postgres
DATABASE_URL=postgresql://postgres.your-project-id:your-db-password@aws-0-region.pooler.supabase.com:6543/postgres

# ===================================================================
# JWT CONFIGURATION (Required)
# ===================================================================
# Generate a secure random string for JWT signing
# You can use: python -c "import secrets; print(secrets.token_urlsafe(64))"
JWT_SECRET_KEY=your-super-secret-jwt-key-make-it-very-long-and-random

# Optional JWT settings (defaults shown)
JWT_ALGORITHM=HS256
JWT_EXPIRATION_MINUTES=60

# ===================================================================
# EMAIL CONFIGURATION (Required for Email Reports)
# ===================================================================
# OPTION 1: Gmail (Recommended)
# Use Gmail App Password, not your regular password!
# Instructions: Google Account > Security > 2-Step Verification > App passwords
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=your-email@gmail.com
SMTP_PASSWORD=your-16-character-gmail-app-password
SMTP_FROM_EMAIL=your-email@gmail.com
EMAIL_USE_TLS=true

# OPTION 2: Other SMTP Provider (uncomment and modify as needed)
# SMTP_HOST=smtp.sendgrid.net
# SMTP_PORT=587
# SMTP_USERNAME=apikey
# SMTP_PASSWORD=your-sendgrid-api-key
# SMTP_FROM_EMAIL=noreply@yourdomain.com
# EMAIL_USE_TLS=true

# ===================================================================
# OPENAI CONFIGURATION (Required for AI Chat)
# ===================================================================
# Get from: https://platform.openai.com/api-keys
# Note: Requires payment method on OpenAI account
OPENAI_API_KEY=sk-your-openai-api-key-here
OPENAI_MODEL=gpt-4
OPENAI_TEMPERATURE=0.1
OPENAI_MAX_TOKENS=1000

# ===================================================================
# APPLICATION SETTINGS (Optional)
# ===================================================================
# Server configuration
API_HOST=0.0.0.0
API_PORT=8000

# File upload limits
MAX_UPLOAD_SIZE=10485760  # 10MB in bytes
ALLOWED_EXTENSIONS=.xlsx

# ===================================================================
# REDIS CONFIGURATION (Optional - for future features)
# ===================================================================
# For background job processing (not required for basic functionality)
REDIS_URL=redis://localhost:6379

# ===================================================================
# DEVELOPMENT SETTINGS (Optional)
# ===================================================================
# Set to 'development' to enable debug features
ENVIRONMENT=production

# Enable detailed API logging (true/false)
DEBUG_LOGGING=false